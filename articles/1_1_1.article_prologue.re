
= 全体像をつかむ

== 概要
この章ではLobbyとRelay機能を使ったマッチメイキング機能の基本的な流れを見ていきます。

== 基本パターン
UGSでマッチメイキングで行うべきことは主に以下の3つです。
 * 認証
 * ロビーの作成/参加
 * Relayサーバーの作成/参加


//indepimage[1_1_1_基本的にやるべきこと][マッチメイキングで基本的にやるべきこと]{
//}

「UGSの概要としては以上です！」と言いたいくらいこれが全てなのですがもう少し深堀していきます。

@<embed>{|latex|\pagebreak }

== 認証
UGSの機能を呼び出す際は必ず認証を行う必要があります。
認証には匿名認証、Google認証、Apple認証があります。
実のところ、匿名認証しか試したことないのですが、匿名認証自体は簡単だったので他の認証もそんなに難しくないと思われます。

今後、触れることがあれば情報を提供していきますが本書では割愛いたします。
LobbyやRelayを個別に使用する場合にも、同様の認証処理が必要です。
トークンなどを特別に管理する必要はなく認証クラスの匿名認証メソッドを呼び出しさえすれば、Lobby/Relay共に使える様になります。
//indepimage[1_3_1_認証について][認証]{
//}

@<embed>{|latex|\pagebreak }

== Lobby
Lobby機能を使うと最近のゲームで一般的なロビーが作れるようになります。

//indepimage[1_1_2_一般的なロビー画面][一般的なロビー画面]{
  2023年11月時点で一般的なゲームのロビー画面
//}

しかし、画面等が用意されているわけではなく、あくまで「サーバー上でプレイヤー同士の待ち合わせができる」機能が提供されているだけです。
そのぐらい最初から作っておいてよという感じですが、このあたりは自分で実装する必要がありました。

PlayersLinkでは、このあたりを開発者があまりやらなくていい様に画面を用意したり、待ち合わせ機能をワンボタンで実行できるようになってます。
具体的には、ロビーの入室/退室、準備状況をプレイヤー間で共有できます。

//indepimage[1_4_1_ロビーでやること][ロビーでやること]{
//}

それぞれのプレイヤーは、ホストとしてロビーを作成するか、クライアントとしてロビーに参加することになります。


//indepimage[1_4_2_ロビーにおける処理の流れ_点呼][ロビーにおける処理の流れ 準備状況の確認]{
//}
次にクライアントはそれぞれ準備が整ったことを通知します。ホストは、クライアント全員の準備がそろったことを確認します。
全員の準備が整ったことを確認できたらいよいよ対戦開始ということで次はRelayの出番です。

@<embed>{|latex|\pagebreak }

== Relay
Relayは日本語で"中継"を意味します。
後述のNetcode for Objectsではホストとなるプレイヤーがサーバーの役割を担います。
しかし、そのままでは他のクライアントとなるプレイヤーが接続できません。
IPアドレスが分からないからです。それを解決するのがRelayサーバーの役割です。

流れとしては、最初にホストとなるプレイヤーがRelayサーバーを立ち上げます。
この時、RelayサーバーからJoinコードが発行されます。
この発行されたJoinコードをどうにかしてクライアント側に渡します。
クライアントはRelayサーバーにこのJoinコードを渡すことでホストのIPアドレス(それとポート番号)を知ることができます。
これにより、無事にホストとクライアントが同期できるようになりました。

途中、Joinコードの受け渡しの説明についてあえて説明を省いたため、もしかしたら「ん？」と思われた方もいらっしゃるかもしれませんがこれからご説明いたしますので安心してください。
Joinコードをクライアント側のプレイヤーに渡す方法は二つあります。
一つ目は、ホストがLobbyデータに書き込みを行い、クライアントがLobbyデータを読み込んで取得する方法です。
//indepimage[1_5_1_Relay概要_ホストの動き][ホストの動き]{
//}

//indepimage[1_5_2_Relay概要_クライアントの動き][クライアントの動き]{
//}

二つ目は、発行されたJoinコードをゲーム画面上からクリップボードにコピーできるようにしておき、DiscordやLineなどで直接クライアントに通知する方法があります。
この方法だともはやLobbyは必要ありません。これはプライベートマッチを実装する際に有効な手段です。

//indepimage[1_5_3_よくあるJoinコードのクリップボード][よくあるJoinコードのクリップボード]{
//}

AMONG USやStumble Guysで見られるようなあれです。
おそらく、これらのゲームもUGSのLobby/Relay機能を使っていると思います。

ここまでUGSの提供する機能をざっと見てきました。次の章からLobbyとRelayの実装方法についてPlayersLinkを例を合わせて見ていきます。

